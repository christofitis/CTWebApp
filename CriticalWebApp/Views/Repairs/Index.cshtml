@model IEnumerable<CriticalWebApp.Models.Repair>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
<h3>
    Search for a repair
</h3>
@using (Html.BeginForm("Index", "Repairs"))
{
    <div class="form-group">
        <input type="text" name="searchCustomerName" id="searchCustomerNameInput" class="form-control" />
        <input type="submit" value="Search" id="searchCustomerNameButton" class="btn btn-default " />
    </div>
}

<hr />
<div class="container">
    @Html.ActionLink("Add", "Create", new { }, new { @class = "btn btn-primary pull-right" })
</div>
<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.RepairDate)
        </th>
        <th>
            Customer Name
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SerialNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InProduct)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CustomerComplaint)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IssueFound)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActionTaken)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OutSerialNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OutProduct)
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RepairDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerFirstName) @Html.DisplayFor(modelItem => item.CustomerLastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SerialNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InProduct) : @Html.DisplayFor(modelItem => item.InProductRevision) 
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerComplaint) @*Shorten the displayed text in the table*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueFound)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActionTaken)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OutSerialNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OutProduct) : @Html.DisplayFor(modelItem => item.OutProductRevision)
            </td>
           
        </tr>
    }

    </table>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('CustomerFirstName', 'CustomerLastName'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/repairs?customerQuery=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#searchCustomerNameInput').typeahead({
                
                highlight: true,
            }, {
                name: 'customers',
                display: 'CustomerFirstName',
                source: customers
            });


        });


    </script>




}




