@model CriticalWebApp.ViewModels.OffsiteJobDetailsViewModel

@{
    ViewBag.Title = "CreateKit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CreateKit</h2>

<div>
    <h4>OffsiteJob</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            P.O.#
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OffsiteJob.PONumber)
        </dd>
        <dt>
            Assembly House
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OffsiteJob.AssemblyHouse.Name)
        </dd>

        <dt>
            Product
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OffsiteJob.Product.Name) Rev:  @Html.DisplayFor(model => model.OffsiteJob.Product.HardwareRevision)
        </dd>



        <dt>
            Job QTY
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OffsiteJob.JobQuantity)
        </dd>

        <dt>
            Issue Date
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OffsiteJob.IssuedDate)
        </dd>

        <dt>
            Amount Delivered
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OffsiteJob.QuantityOfProductDelivered)
        </dd>

    </dl>
</div>

<div class="container">
    <input type="button" value="SAVE" class="btn btn-primary saveChangesButton" />
    <table class="table table" id="jobInventoriesTable">
        <tr>
            <th>Part</th>
            <th>Description</th>

            <th class="qtyCell">Qty At Job Location</th>
            @*Original QTY given to location*@

        </tr>
        @foreach (var part in Model.JobInventories)
        {
            <tr>
                <td class="jobInventoryId" id="@part.Id">
                    @part.Part.Name
                    
                </td>
                <td>
                    @part.Part.Description
                </td>
                <td>
                    <input type="text" id='@part.PartId' value="@part.QuantityAtJobSite" class="qtyInput small col-xs-5 text-center" autocomplete="off" />
                </td>

            </tr>
        }
    </table >
    <input type="button" value="SAVE" class="btn btn-primary saveChangesButton" />

</div>



<p>
    @Html.ActionLink("Back to List", "Index")
</p>

@section scripts {
    <script>
        $(document).ready(function () {
            var vm = {
                id: 0,
                PartId: 0,
                OffsiteJobId: 0,
                QuantityAtJobSite: 0
            };


            
         


            //changes color of row on section
            var color = '#fffff';
            $('input[type=text]').focusin(function () {
                color = $(this).css('background-color');
                $(this.parentElement.parentElement).css('background', '#585858');
            });
            $('input[type=text]').focusout(function () {
                $(this.parentElement.parentElement).css('background', color);
            });

            $('.saveChangesButton').on('click', function () {

                $('#jobInventoriesTable tr').each(function (i, data) {
                    var value = $(this).find("input").val();
                    var offsiteJobId = @Model.OffsiteJob.Id;
                    var partId =  $(this).find("input").attr("id");
                    var id =  $(this).find(".jobInventoryId").attr("id");
                    if (value >= 0){
                        //console.log("SAVING - ID: " + partId + " Value: " + value + " offsiteJobId: " + offsiteJobId);
                        vm.id = id;
                        vm.PartId = partId;
                        vm.OffsiteJobId =  offsiteJobId;
                        vm.QuantityAtJobSite = value;
                        console.log(vm);

                        $.ajax({
                            url: "/api/jobinventories/" + id,
                            method: "put",
                            data: vm
                        })
              .done(function () {
                  console.log("DONE");

              })
              .fail(function () {
                  console.log("FAIL");
              });
                    }
                    
                });

                //console.log(vm);
          



            });

        });

        

    </script>



}

<style>
    input[type=text] {
        color: white;
      
        background-color: #2E3338;
        border: solid 1px black;
     
    }

    input[type=date] {
        color: white;
        background-color: #2E3338;
    }


</style>