@model IEnumerable<CriticalWebApp.Models.SerialNumber>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Serial Number Lookup</h2>
@using (Html.BeginForm("Index", "SerialNumbers",FormMethod.Post, new { id = "serialNumberSearchForm"}))
{
    <div class="form-inline">
        <div class="text-primary">Serial #: <b class="text-info">@ViewBag.Number </b></div>
        <input class="form-control" autocomplete="off" type="text" name="serialNumberQuery" id="serialNumberQuery" placeholder="2r1234" />
        
    </div>



    <div class="form-inline">
        <div class="text-primary">Customer: <b class="text-info">@ViewBag.CustomerFirstName @ViewBag.CustomerLastName</b> </div>
        <input class="form-control" type="text" name="customerFirstNameQuery" id="customerFirstNameQuery" placeholder="First or Company Name" />
        <input class="form-control" type="text" name="customerLastNameQuery" id="customerFirstNameQuery" placeholder="Last Name" />
    </div>


    <div class="form-inline">
        <div class="text-primary">Invoice #: <b class="text-info">@ViewBag.InvoiceNumber</b> </div>
        <input class="form-control" type="text" name="invoiceNumberQuery" id="invoiceNumberQuery" placeholder="#########" />
    </div>




    <div class="form-inline">
        <div class="text-primary">MFG Date Range:<b class="text-info"> @ViewBag.StartMFGDate @ViewBag.EndMFGDate</b></div>
        <input class="form-control" type="date" name="startDateQuery" id="startDateQueryInput" />
        <input class="form-control" type="date" name="endDateQuery" id="endDateQueryInput" />
    </div>


    <div class="form-inline">
        <div class="text-primary">Ship Date Range: <b class="text-info">@ViewBag.StartShipDate @ViewBag.EndShipDate</b></div>
        <input class="form-control" type="date" name="startShipDateQuery" id="startShipDateQueryInput" />
        <input class="form-control" type="date" name="endShipDateQuery" id="endShipDateQueryInput" />

        <input class="btn btn-default" type="button" value="Search" id="shipDateSearchButton" />
    </div>
}

<div class="containt">
    <h4></h4>
</div>



                @Html.ActionLink("Add", "Create", new { }, new { @class = "btn btn-primary pull-right" })



                <table class="table table-hover" id="serialNumberTable">
                    <tr >
                        <th>
                            Serial Number
                        </th>
                        <th>
                            Product
                        </th>
                        <th>
                            Hardware Revision
                        </th>

                        <th>
                            Software Revision
                        </th>
                        <th>
                            MFG Date
                        </th>
                        <th>
                            Customer
                        </th>
                        <th>
                            Invoice #
                        </th>
                        <th>
                            Ship Date
                        </th>
                        
                        <th>
                            @Html.DisplayNameFor(model => model.Notes)
                        </th>
                        

                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr style="background-color: aqua">
                            <td>
                                <b>@Html.ActionLink((@Html.DisplayFor(modelItem => item.Number).ToString()), "Details", new { id = item.Id })</b>
                            </td>
                         
                            <td>
                                @Html.DisplayFor(modelItem => item.Product.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Product.HardwareRevision)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Product.SoftwareRevision)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MFGDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CustomerFirstName) @Html.DisplayFor(modelItem => item.CustomerLastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InvoiceNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ShipDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Notes)
                            </td>

                        </tr>
                    }

                </table>
                <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js"></script>

                <script>
                    $(document).ready(function () {
                        var counter = 0;
                        var numOfTimesToCheck = 0;
                        var inputPrefix = "";
                        var inputNumber = 0;
                        
                        document.getElementById('serialNumberQuery').focus();
                        $('#serialNumberQuery').on('keydown', function search(event) {
                            toastr.clear();
                            if (event.keyCode == 13) {
                                var userInput = $(this).val();
                                numOfTimesToCheck = 0;
                                counter = 0;
                                clearTable();
                                getSerialNumberNoPrefix(userInput);
                                console.log("Checking: " + inputPrefix + inputNumber);
                                
                                $.when(makeAjaxCall("/api/serialnumbers?numberquery=", inputPrefix + inputNumber, false)).done(function () {
                                    if (counter == 0) {
                                        $.when(makeAjaxCall("/api/serialnumbers?estimageNumberQuery=", inputPrefix + inputNumber, true)).done(function () {
                                            toastr.warning("Closest Serial # Found.", "Exact match not found!");
                                        });
                                    }
                                    else {
                                        toastr.success("Exact match found!");
                                    }
                                });
                                

                                    
                                    
                            }
                        });
                        
                        function makeAjaxCall(url, input, isEstimate) {
                          return  $.ajax({
                                url: url + input,
                                method: "GET",
                                async: true,
                                timeout: 10000,
                                success: function (data) {
                                    //console.log(data);
                                    var maxReturn = 1000;
                                    $.each(data, function (i, data) {
                                        //console.log(data);
                                        if (counter < maxReturn) {
                                            //console.log(counter);
                                            var mfgDate = new Date(data.MFGDate);
                                            var mfgDay = mfgDate.getDate();
                                            var mfgMonth = mfgDate.getMonth();
                                            mfgMonth += 1; //jquery getMonth is 0 based, so add 1
                                            var mfgYear = mfgDate.getFullYear();
                                            var mfgDateFormatted = mfgMonth + '/' + mfgDay + '/' + mfgYear;
                                            if (data.Number == null) data.Number = '';   //if value returned is null, it displays nothing in that cell
                                            if (data.Product.Name == null) data.Product.Name = '';
                                            if (data.Product.HardwareRevision == null) data.Product.HardwareRevision = '';
                                            if (data.Product.SoftwareRevision == null) data.Product.SoftwareRevision = '';
                                            if (data.MFGDate == null) mfgDateFormatted = '';
                                            if (data.CustomerFirstName == null) data.CustomerFirstName = '';
                                            if (data.InvoiceNumber == null) data.InvoiceNumber = '';
                                            if (data.ShipDate == null) data.ShipDate = '';
                                            if (data.Notes == null) data.Notes = '';
                                            //append the result to the table
                                            if (isEstimate) {
                                                $('#serialNumberTable').append('<tr><td>' + data.Number + '</td><td>' + data.Product.Name + '</td><td>' + data.Product.HardwareRevision + '</td><td>' + data.Product.SoftwareRevision + '</td><td>' + mfgDateFormatted + '</td><td>' + data.CustomerFirstName + '</td><td>' + data.InvoiceNumber + '</td><td>' + data.ShipDate + '</td><td>' + data.Notes + '</td></tr>');
                                            }
                                            else {
                                                $('#serialNumberTable').append('<tr><td>' + data.Number + '</td><td>' + data.Product.Name + '</td><td>' + data.Product.HardwareRevision + '</td><td>' + data.Product.SoftwareRevision + '</td><td>' + mfgDateFormatted + '</td><td>' + data.CustomerFirstName + '</td><td>' + data.InvoiceNumber + '</td><td>' + data.ShipDate + '</td><td>' + data.Notes + '</td></tr>');
                                            }
                                            counter++;
                                            console.log(counter);
                                        }
                                        else {
                                            toastr.warning('Enter more spacific serial number.', 'Too many results')
                                            return false;
                                        }

                                    });
                                    //return counter;
                                },
                                error: function () {
                                    toastr.error("Nothing found close to that SERIAL #","Timed out");
                                }

                            });
                        };

                        function clearTable() {
                            $('#serialNumberTable td').remove();
                        };

                        //function to take user input and format it to proper AT12345 (prefix + 5 digits)
                        function getSerialNumberNoPrefix(input) {
                            var reversedUserInput = input.split("").reverse().join("");
                            var snNumber = reversedUserInput.match(/\d+/)[0].split("").reverse().join(""); //string works for 0123
                            var snPrefix = input.substring(0, (input.length - snNumber.length));
                            var concatSnNumber = ("00000" + snNumber).toString();
                            var formattedSnNumber = concatSnNumber.substring(concatSnNumber.length - 5);
                            inputPrefix = snPrefix;
                            inputNumber = formattedSnNumber;
                        };
                    });
                </script>
<style>
    .loader {
        border: 16px solid #f3f3f3; /* Light grey */
        border-top: 16px solid #3498db; /* Blue */
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 2s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>